{"version":3,"sources":["components/Header.js","components/Footer.js","components/Resultdisplay.js","components/Searchbar.js","containers/Signin.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Header","state","name","profile","fetch","then","resp","json","data","setState","empty","newarr","this","index","length","push","email","Component","Footer","Resultdisplay","url","box","id","className","alt","src","style","width","top","topRow","right","rightCol","left","leftCol","bottom","bottomRow","Searchbar","imageSearch","buttonClick","placeholder","onChange","onClick","Signin","method","action","type","href","Navbar","app","Clarifai","App","apiKey","calculateLocation","image","document","getElementById","Number","height","left_col","top_row","right_col","bottom_row","boxValue","location","console","log","boundingBox","imageUrl","event","input","target","value","loadImage","models","predict","FACE_DETECT_MODEL","response","result","outputs","regions","region_info","bounding_box","catch","error","params","particles","number","density","enable","value_area","color","shape","stroke","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","array","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","particles_nb","remove","mouse","retina_detect","fn","interact","vendors","tmp","Boolean","window","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b76934cf.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass Header extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            name : 'Tope',\r\n            profile: [],\r\n        };\r\n    }  \r\n\r\n     componentDidMount(){\r\n     \r\n            fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then( resp => resp.json())\r\n            .then(data =>{\r\n              this.setState({profile: data})\r\n            });                \r\n     }\r\n    \r\n  \r\n\r\n     render(){\r\n        let empty = [];\r\n        let newarr = this.state.profile;\r\n        for (let index = 0; index < newarr.length; index++) {\r\n            empty.push(newarr[index].email);\r\n        }       \r\n\r\n    return (\r\n    <div>\r\n        <h2>{this.state.name}, your current rank is...</h2>\r\n        <p>#1</p>\r\n        <p>This Magic Brain will detect faces in your pictures. Give it a try</p>\r\n        <p>My Email is: {empty[3]}</p>\r\n    </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\n\r\n\r\nclass Footer extends Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n                <footer>Designed By tlonge techhub</footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react'\r\nimport './Resultdisplay.css'\r\n\r\nlet Resultdisplay =({url, box})=>{\r\n   return( \r\n   <div id='imageDiv'>\r\n        <p>RESULT DISPLAY SECTION</p>\r\n        <div className = 'imageDisplay'>\r\n            <img id = 'testImage' alt='result' src = {url} style = {{width : '100%'}}></img>\r\n            <div className='bounding-box' style = {{top : box.topRow, right : box.rightCol, left:box.leftCol, bottom : box.bottomRow}}></div>\r\n        </div>\r\n        <p>this is the box result: {box.topRow}</p>\r\n    </div>\r\n   )\r\n}\r\n\r\nexport default Resultdisplay;","import React from 'react'\r\nimport './Searchbar.css'\r\n\r\nlet Searchbar =({imageSearch, buttonClick})=>{\r\n   return( <div id = 'searchDiv'>\r\n        <input placeholder = \"Enter your search item\" onChange = {imageSearch}></input>\r\n        <button onClick = {buttonClick}>Detect</button>\r\n    </div>\r\n   )\r\n}\r\n\r\nexport default Searchbar;","import React, { Component } from 'react'\r\n\r\nclass Signin extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <form method= 'POST' action='/'>\r\n                    <label>Email</label><br></br>\r\n                    <input type='email'></input><br></br>\r\n                    <label>Password</label><br></br>\r\n                    <input type='password'></input><br></br>\r\n                    <button type='submit'>Sign In</button><br></br>\r\n                    <a href = '#'>Register</a>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Signin;","import React from 'react'\r\nimport './Navbar.css'\r\n\r\nlet Navbar=()=>{\r\n    return(\r\n        <div id='NavDiv'>\r\n            <img alt = 'applogo' id = 'applogo'></img>\r\n            <ul>\r\n                <li><a href='#'>Sign-In</a></li>\r\n                <li><a href ='#'>Register</a></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\nimport './App.css';\nimport Particles from 'react-particles-js'\nimport Header from './components/Header.js'\nimport Footer from './components/Footer.js'\nimport Resultdisplay from './components/Resultdisplay.js'\nimport Searchbar from './components/Searchbar.js'\nimport Signin from './containers/Signin.js'\nimport Navbar from './components/Navbar.js'\nimport Clarifai from 'clarifai';\n \nconst app = new Clarifai.App({\n apiKey: 'f4ac6de7ce574dee94539b1f27bea429'\n});\n\n\nclass App extends Component {\n  constructor(){\n    super()\n\n    this.state = {\n      input: '',\n      imageUrl : '',\n      boundingBox: {},\n    } \n  }\n\n  calculateLocation=(data)=>{\n    // let res = data.outputs[0].data.regions[0].region_info.bounding_box;\n  //  this.setState({boundingBox : data})\n  let image = document.getElementById('testImage');\n  let width = Number(image.width);\n  let height = Number(image.height);\n\n  return {\n    leftCol : data.left_col * width,\n    topRow : data.top_row * height,\n    rightCol : width - (data.right_col * width),\n    bottomRow : height - (data.bottom_row * height),\n  }\n  };\n\n  boxValue=(location)=>{\n    console.log(location)\n    this.setState({boundingBox : location})\n  }\n  \n  imageUrl=(event)=>{\n    this.setState({input : event.target.value});\n  };\n\n  loadImage=()=>{\n  this.setState({imageUrl : this.state.input});\n   app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n   .then(response=>{\n     let result = (response.outputs[0].data.regions[0].region_info.bounding_box);\n      console.log(result);\n     this.boxValue(this.calculateLocation(result));\n    }).catch(error=>console.log(error));\n  }\n\n  \n  render(){\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Header />\n      <Searchbar imageSearch = {this.imageUrl} buttonClick = {this.loadImage}/>\n      <Resultdisplay url = {this.state.imageUrl} box = {this.state.boundingBox}/>\n      <Signin />\n      <Footer />\n\n      <Particles \n      className=\"particles\"\n      params={{\n        particles: {\n        //     number: {\n        //         value: 80\n        //     },\n        //     size: {\n        //         value: 3\n        //     }\n        // },\n        // interactivity: {\n        //     events: {\n        //         onhover: {\n        //             enable: true,\n        //             mode: \"repulse\"\n        //         }\n        //     }\n        number: {\n          value: 75,\n          density: {\n            enable: true,\n            value_area: 1000\n          }\n        },\n        color: {\n          value: '#ff0'\n        },\n        shape: {\n          type: 'circle',\n          stroke: {\n            width: 0,\n            color: 'white'\n          },\n          polygon: {\n            nb_sides: 3\n          },\n          image: {\n            src: '',\n            width: 100,\n            height: 100\n          }\n        },\n        opacity: {\n          value: 0.5,\n          random: false,\n          anim: {\n            enable: false,\n            speed: 2,\n            opacity_min: 0,\n            sync: false\n          }\n        },\n        size: {\n          value: 2,\n          random: false,\n          anim: {\n            enable: false,\n            speed: 20,\n            size_min: 0,\n            sync: false\n          }\n        },\n        line_linked: {\n          enable: true,\n          distance: 100,\n          color: '#fff',\n          opacity: 1,\n          width: 1\n        },\n        move: {\n          enable: true,\n          speed: 2,\n          direction: 'none',\n          random: false,\n          straight: false,\n          out_mode: 'bounce',\n          bounce: true,\n          attract: {\n            enable: false,\n            rotateX: 3000,\n            rotateY: 3000\n          }\n        },\n        array: []\n      },\n      interactivity: {\n        detect_on: 'window',\n        events: {\n          onhover: {\n            enable: true,\n            mode: 'grab'\n          },\n          onclick: {\n            enable: true,\n            mode: 'push'\n          },\n          resize: true\n        },\n        modes: {\n          grab:{\n            distance: 100,\n            line_linked:{\n              opacity: 1\n            }\n          },\n          bubble:{\n            distance: 200,\n            size: 80,\n            duration: 0.4\n          },\n          repulse:{\n            distance: 200,\n            duration: 0.4\n          },\n          push:{\n            particles_nb: 4\n          },\n          remove:{\n            particles_nb: 2\n          }\n        },\n        mouse:{}\n      },\n      retina_detect: false,\n      fn: {\n        interact: {},\n        modes: {},\n        vendors:{}\n      },\n      tmp: {}\n    \n       \n    }} />\n    </div>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}